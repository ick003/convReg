"0","paramList = listParam"
"0","theta.est = rep(0,ncol(paramList$X.mu1)+ncol(paramList$X.sigma1)+ncol(paramList$X.mu2)+ncol(paramList$X.sigma2))"
"0","theta.name = c(paste(""mu 1: "",colnames(paramList$X.mu1),sep=""""),"
"0","                  paste(""sigma 1: "",colnames(paramList$X.sigma1),sep=""""),"
"0","                  paste(""mu 2: "",colnames(paramList$X.mu2),sep=""""),"
"0","                  paste(""sigma 2: "",colnames(paramList$X.sigma2),sep=""""))"
"0","theta.est[paramList$init.theta$idx1] = paramList$init.theta$theta.mu1"
"0","theta.est[paramList$init.theta$idx1b] = paramList$init.theta$theta.sigma1"
"0","theta.est[paramList$init.theta$idx2] = paramList$init.theta$theta.mu2"
"0","theta.est[paramList$init.theta$idx2b] = paramList$init.theta$theta.sigma2"
"0","theta.est[paramList$idx.fixed] = paramList$fixed$value"
"0","names(theta.est) = theta.name"
"0","idx.na = which(is.na(theta.est))"
"0","if(length(idx.na) > 0){"
"0","      if(!quiet){message(sprintf('NA coefficients estimated, dropping variables: %s', theta.name[idx.na]))}"
"0","      "
"0","      paramList$idx.fixed = c(paramList$idx.fixed, idx.na)"
"0","      paramList$idx.var   =  which(!(theta.name %in% c(paramList$fixed$name, theta.name[idx.na])))"
"0","      "
"0","      paramList$fixed$name = c(paramList$fixed$name,theta.name[idx.na])"
"0","      paramList$fixed$value = c(paramList$fixed$value, rep(0, length(idx.na)))"
"0","   }"
"0","N.THETA   <- ncol(paramList$X.mu1)"
"0","N.THETA.2 <- ncol(paramList$X.mu2)"
"0","N.SIGMA   <- ncol(paramList$X.sigma1)"
"0","theta0 = list(init = c(paramList$init.theta[[1]],paramList$init.theta[[2]],paramList$init.theta[[3]],paramList$init.theta[[4]]),"
"0","                    indices = list(idx1 = paramList$init.theta$idx1,"
"0","                                   idx1b = paramList$init.theta$idx1b,"
"0","                                   idx2 = paramList$init.theta$idx2,"
"0","                                   idx2b = paramList$init.theta$idx2b))"
"0","theta0"
"1","$init
"
"1","   mu 1: (Intercept) "
"1","           mu 1: GNP "
"1","sigma 1: (Intercept) "
"1","   mu 2: (Intercept) "
"1","           mu 2: GNP "
"1","
"
"1","        -3.253372640 "
"1","         0.033023989 "
"1","         2.000000000 "
"1","         0.365278480 "
"1","         0.003742581 "
"1","
"
"1","sigma 2: (Intercept) "
"1","
"
"1","         0.100000000 "
"1","
"
"1","
"
"1","$indices
"
"1","$indices$idx1
"
"1","[1]"
"1"," 1"
"1"," 2"
"1","
"
"1","
"
"1","$indices$idx1b
"
"1","[1]"
"1"," 3"
"1","
"
"1","
"
"1","$indices$idx2
"
"1","[1]"
"1"," 4"
"1"," 5"
"1","
"
"1","
"
"1","$indices$idx2b
"
"1","[1]"
"1"," 6"
"1","
"
"1","
"
"1","
"
"0","res.em = convRegEM(paramList$formula.resp,paramList$formula.mu1, paramList$formula.sigma1, paramList$formula.mu2, paramList$formula.sigma2,"
"0","                         dist1 = paramList$dist1, dist2 = paramList$dist2,df = paramList$data, theta.0 = theta0,"
"0","                         X.mu1 = paramList$X.mu1,X.sigma1 = paramList$X.sigma1,X.mu2 = paramList$X.mu2,X.sigma2 = paramList$X.sigma2,"
"0","                         fun1 = paramList$fun1,fun2 = paramList$fun2,fun3 = paramList$fun3,fun4 = paramList$fun4, "
"0","                         weights = paramList$weights, quiet = paramList$quiet, debug = paramList$debug, "
"0","                         scale = paramList$scale, scaleInit = paramList$scaleInit)"
"2","Error in 0:maxK : NA/NaN argument
"
